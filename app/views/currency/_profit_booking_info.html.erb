<% select_data = @data[0..-2] %>
<% data = @data[-1] %>
<% even, odd = data[3..-1].partition.each_with_index{ |el, i| i.even? } %>
<% total = data[2] %>
<% profit = (select_data[2..3].sum + 0.6).round(1)  %>
<% profit_index = @default.find_index(profit) %>
<% profit_max, profit_min = [(even[profit_index] / total.to_f * 100).round(2)], [(odd[profit_index] / total.to_f * 100).round(2)] %>
<% (profit_index+1..even.count - 1).to_a.each do |index| %>
  <%  profit_max << (even[index] / even[index - profit_index].to_f * 100).round(2) if even[index - 1] != 0 %>
  <%  profit_min << (odd[index] / odd[index - profit_index].to_f * 100).round(2) if odd[index - 1] != 0 %>
<% end %>

 
  <label> <%= select_data[4]%> Info: </label>  
    <table class="table table-bordered">
      <thead>
        <tr>
          <th style = "width: 7.2%">Price</th>
          <th>Max_count</th>
          <th style = "width: 11.7%">Min_Count</th>
          <th style = "width: 15.8%">Max_count_%</th>
          <th style = "width: 15.7%">Min_Count_%</th> 
          <th style = "width: 24.7%">Profit_max_%</th>
          <th style = "width: 25%">Profit_min_%</th>                               
        </tr>
      </thead>
      <tbody>     
        <% @default.each_index do |index|%>
          <tr>
            <td style = "width: 6.7%"><%= @default[index].round(1) %></td>
            <% if index > 0 %>          
              <td style = "width: 11.7%"><%= even[index - 1] != 0 ? even[index] : nil %></td>
              <td style = "width: 11.7%"><%= odd[index - 1] != 0 ? odd[index] : nil %></td>
              <td style = "width: 15%"><%= even[index - 1] != 0 ? ((even[index] / total.to_f) * 100).round(2).to_s + "%" : nil %></td>
              <td style = "width: 15%"><%= odd[index - 1] != 0 ? ((odd[index] / total.to_f) * 100).round(2).to_s + "%" : nil %></td>  
              <td style = "width: 20%"><%= (index < profit_index or profit_max[index - profit_index].nil?) ? nil : profit_max[index - profit_index].to_s + "% .......(Buy/Sell @ #{(@default[index - profit_index]).round(1)})" %> </td>
              <td style = "width: 20%"><%= (index < profit_index or profit_min[index - profit_index].nil?) ? nil : profit_min[index - profit_index].to_s + "% .......(Buy/Sell @ #{(@default[index - profit_index]).round(1)})" %> </td>       
            <% else %>
              <td style = "width: 11.7%"><%= even[index] %></td>
              <td style = "width: 11.7%"><%= odd[index] %></td>
              <td style = "width: 15%"><%= ((even[index] / total.to_f) * 100).round(2) %>%</td>
              <td style = "width: 15%"><%= ((odd[index] / total.to_f) * 100).round(2) %>%</td>  
              <td style = "width: 20%">  </td>
              <td style = "width: 20%">  </td>        
            <% end %>
          </tr>
        <% end %>                    
      </tbody>
    </table>
      
